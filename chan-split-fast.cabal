-- Initial chan-split-fast.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                chan-split-fast
version:             0.1.0.0
-- synopsis:            
-- description:         
license:             BSD3
license-file:        LICENSE
author:              Brandon Simmons
maintainer:          brandon.m.simmons@gmail.com
-- copyright:           
category:            Concurrency
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

flag dev
  default: False
  manual: True

library
  hs-source-dirs: src
  exposed-modules:     Control.Concurrent.Chan.Split
                     , Control.Concurrent.Chan.Split.Internal
                     , Control.Concurrent.Chan.Unagi
  other-modules:       Control.Concurrent.Chan.Unagi.Internal
  ghc-options:        -Wall -funbox-strict-fields
  build-depends:       base
                     , atomic-primops==0.6.0.5
                     , primitive>=0.5.3
  default-language:    Haskell2010


-- TODO  possibly have a different Main.hs for each Chan type, but then use different test-suites which set a var to decide which to import.
test-suite test
  type: exitcode-stdio-1.0
  ghc-options: -Wall -funbox-strict-fields
  ghc-options: -O2  -rtsopts  -threaded -with-rtsopts=-N
  ghc-options: -fno-ignore-asserts
  -- I guess we need to put 'src' here to get access to Internal modules
  hs-source-dirs: tests, src
  main-is: Main.hs
  build-depends:       base
                     , primitive
                     , atomic-primops
  default-language:    Haskell2010



-- for profiling, checking out core, etc
executable dev-example
  -- for n in `find dist/build/core-example/core-example-tmp -name '*dump-simpl'`; do cp $n "core-example/$(basename $n).$(git rev-parse --abbrev-ref HEAD)"; done
  if !flag(dev)
    buildable: False

  ghc-options: -ddump-to-file -ddump-simpl -dsuppress-module-prefixes -dsuppress-uniques -ddump-core-stats -ddump-inlinings
  ghc-options: -O2  -rtsopts  
  
  -- Either do threaded for eventlogging and simple timing...
  --ghc-options: -threaded -with-rtsopts=-N2
  --ghc-options: -eventlog
  -- ...or do non-threaded runtime
  ghc-prof-options: -fprof-auto
  --Relevant profiling RTS settings:  -xt
  -- TODO also check out +RTS -A10m, and look at output of -sstderr

  hs-source-dirs: core-example
  main-is: Main.hs
  build-depends:       base
                     , stm
                     , chan-split-fast
  default-language:    Haskell2010

